<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mechanisms on Kolibri Documentation</title><link>http://awagen.github.io/kolibri/kolibri-base/2-mechanisms/</link><description>Recent content in Mechanisms on Kolibri Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 18 Aug 2021 23:02:39 +0200</lastBuildDate><atom:link href="http://awagen.github.io/kolibri/kolibri-base/2-mechanisms/index.xml" rel="self" type="application/rss+xml"/><item><title>Basics</title><link>http://awagen.github.io/kolibri/kolibri-base/2-mechanisms/1-overview/</link><pubDate>Thu, 09 Sep 2021 20:08:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/kolibri-base/2-mechanisms/1-overview/</guid><description>Basics First, all batches are represented by an ActorRunnable object, that on execution provides a tuple of a KillSwitch and Future[Done] which completes when the execution completes.
The job definition is received by the SupervisorActor, which creates an JobManagerActor per job and sends the job definition to it. Note that both SupervisorActor and JobManagerActor run on the same node, which is the node marked as httpserver. The JobManagerActor takes care of batches distribution, sending new batches to process when previous ones finish.</description></item></channel></rss>