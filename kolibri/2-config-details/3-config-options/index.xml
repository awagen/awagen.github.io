<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration Options on Kolibri Documentation</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/</link><description>Recent content in Configuration Options on Kolibri Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Sep 2023 10:00:00 +0200</lastBuildDate><atom:link href="http://awagen.github.io/kolibri/2-config-details/3-config-options/index.xml" rel="self" type="application/rss+xml"/><item><title>Resource Directives</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/1-resourcedirectives/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/1-resourcedirectives/</guid><description>Resource directives describe a resource, provide instructions how to load them and assign the resource an identifier such that it can be referenced and loaded. In the job definitions they are used to load resources upfront that are big or repeatedly accessed, such as judgement lists.
Note: the supplier option VALUES_FROM_NODE_STORAGE is usually not valid since it assumes that a resource with the defined identifier has already been loaded when this resource is accessed, which might not be the case.</description></item><item><title>Request Parameters</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/2-requestparameters/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/2-requestparameters/</guid><description>Request parameters can be configured in different ways and types. This page describes how single parameters are defined and composed to create permutations (e.g needed in extensive offline evaluations where wide range of parameters are permutated to use in requests to the target system).
There are two general types of parameters, which are STANDALONE and MAPPING. STANDALONE just stands for a single parameter (with one or more values), while MAPPING allows to specify relationships between different parameters.</description></item><item><title>Parsing Configuration</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/3-parsingconfig/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/3-parsingconfig/</guid><description>A parsing configuration consists of the following parts:
selector that defines which fields to pick from a json name under which the extracted data is stored castType that defines what the value is cast to (Note: for a recursive selector that extracts a sequence of single-value fields, use the single-value cast type, that is if you use a recursive selector and each single extracted element is a string, you will use castType &amp;lsquo;STRING&amp;rsquo;, not &amp;lsquo;SEQ[STRING]&amp;rsquo;.</description></item><item><title>Calculations</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/4-calculations/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/4-calculations/</guid><description>Lets look at available calculation types:
Calculation Types IR_METRICS IDENTITY FIRST_TRUE FIRST_FALSE TRUE_COUNT FALSE_COUNT BINARY_PRECISION_TRUE_AS_YES BINARY_PRECISION_FALSE_AS_YES STRING_SEQUENCE_VALUE_OCCURRENCE_HISTOGRAM COMPLETION COMING SOON</description></item><item><title>Aggregation Type Mappings</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/5-aggregationtypemappings/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/5-aggregationtypemappings/</guid><description>Aggregation type mappings just specify for each defined metric name the appropriate type of aggregation. If no aggregation type is specified in the job definitions, the fallback will be DOUBLE_AVG (which will lead to problems if the calculated value is not a number and you did not specify the right aggregation type). The aggregation types are:
Aggregation Types DOUBLE_AVG SEQUENCE_KEEP_FIRST _MAP_UNWEIGHTED_SUM_VALUE _ _MAP_WEIGHTED_SUM_VALUE _NESTED_MAP_UNWEIGHTED_SUM_VALUE _NESTED_MAP_WEIGHTED_SUM_VALUE COMPLETION COMING SOON</description></item><item><title>Tagging Configuration</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/6-taggingconfiguration/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/6-taggingconfiguration/</guid><description>In Kolibri, tagging is used on results to establish groupings in the result sets. This allows mechanisms such as aggregation of different results based on equal tags. Thus tags effectively define the granularity of your results. Let&amp;rsquo;s say you tag by the query-parameter and you run the evaluation on a range of parameters, all over a set of 1000 queries. Now you will have 1000 single results. To the contrary, in case you have a parameter that can only assume two values, and you tag based on this parameter, you will only have two results.</description></item><item><title>Tasks</title><link>http://awagen.github.io/kolibri/2-config-details/3-config-options/7-tasks/</link><pubDate>Thu, 07 Sep 2023 10:00:00 +0200</pubDate><guid>http://awagen.github.io/kolibri/2-config-details/3-config-options/7-tasks/</guid><description>Tasks are modular descriptions of computations. A job consists of batches of elements that undergo a sequence of tasks. These are the currently available task types:
Task Type REQUEST_PARSE Define target systems along with http method, fixed parameters, contextPath, which fields to parse, on which criteria to tag and which keys are used for storage of successful results and failures. _METRIC_CALCULATION _ Based on parsed results (such as provided by the REQUEST_PARSE task), define which metrics to calculate.</description></item></channel></rss>